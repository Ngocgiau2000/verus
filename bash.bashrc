echo 'echo " ━━━━━━━━━━━━━━━━❖❖❖━━━━━━━━━━━━━━━━ "
echo " ▶ DEVELOPER : [Dien-anonymous] "
echo " ▶ CREATOR : [Dien TOOL] "
echo " ▶ TOOL : [Auto] "
echo " ▶ ZALO : [0899717143] "
echo " ━━━━━━━━━━━━━━━━❖❖❖━━━━━━━━━━━━━━━━ "
sleep 0
echo ""
echo " ▶ DEVICE INFO PHONE 64BIT ......! "
echo ""
echo " ▪ Build Release   $(getprop ro.build.date)			"
sleep 0
echo " ▪ Device Model    $(getprop ro.product.model)		"
sleep 0
echo " ▪ Codename Model  $(getprop ro.build.product)		"
sleep 0
echo " ▪ Device Brand    $(getprop ro.product.brand)		"
sleep 0
echo " ▪ SDK build       $(getprop ro.build.version.sdk)	"
sleep 0
echo " ▪ Kernel Type    CPU/SUCCESFULLY! "
sleep 0
echo ""
echo " ▶ FLASHING MODULE CPU,GPU PLEASE WAIT... "
sleep 0
echo ""
echo " ☑ Graphics Processing Unit "
sleep 0
echo " ☑ Hardware Acceleration "
sleep 0
echo " ☑ GPU Graphics Boost "
sleep 0
echo " ☑ CPU PROPERTIES "
sleep 0
echo " ☑ MAX High Performance "
sleep 0
echo ""
echo " ▶ PLEASE WAIT... "
sleep 0
echo ""
echo " ■□□□□□□□□□  "
sleep 0
echo " ■■□□□□□□□□  "
sleep 0
echo " ■■■□□□□□□□  "
sleep 0
echo " ■■■■□□□□□□  "
sleep 0
echo " ■■■■■□□□□□  "
sleep 0
echo " ■■■■■■□□□□  "
sleep 0
echo " ■■■■■■■□□□  "
sleep 0
echo " ■■■■■■■■□□  "
sleep 0
echo " ■■■■■■■■■□ "
sleep 0
echo " ■■■■■■■■■■ "
sleep 0
echo " ▶ AUTO SETTING SUCCESFULLY! "
sleep 0
echo " ▪ Kernel Type Booter $(getprop debug.dev.addfree 4)
echo " ▪ Kernel Type Booter $(getprop debug.gfx.driver 1)
echo " ▪ Kernel Type Booter $(getprop debug.performance_schema_digests_size 9950000)
echo " ▪ Kernel Type Booter $(getprop log.tag.BatchInternal VERBOSE)
echo " ▪ Kernel Type Booter $(getprop put global activity_manager_constants max_cached_processes 1849)
echo " ▪ Kernel Type Booter $(getprop put system pointer_speed 7)
echo " ▪ Kernel Type Booter $(getprop debug.hwui.renderer skiagl)
echo " ▪ Kernel Type Booter $(getprop debug.renderengine.backend skiaglthreaded)
echo " ▪ Kernel Type Booter $(getprop debug.angle.overlay FPS:Skiagl*PipelineCache*)
echo " ▪ Kernel Type Booter $(getprop debug.performance_schema 1)
echo " ▪ Kernel Type Booter $(getprop debug.performance_schema_max_memory_classes 320)
echo " ▪ Kernel Type Booter $(getprop debug.performance_schema_max_socket_classes 10)
echo " ▪ Kernel Type Booter $(getprop debug.composition.type c2d)
echo " ▪ Kernel Type Booter $(getprop debug.gr.swapinterval 0)
echo " ▪ Kernel Type Booter $(getprop debug.hwui.disable_draw_reorder true)
echo " ▪ Kernel Type Booter $(getprop debug.hwui.skip_empty_damage true)
echo " ▪ Kernel Type Booter $(getprop debug.sf.showfps 0)
echo " ▪ Kernel Type Booter $(getprop debug.forceAutoTextureCompression 1)
echo " ▪ Kernel Type Booter $(getprop debug.hwui.fps_divisor -1)
echo " ▪ Kernel Type Booter $(getprop debug.cpurend.vsync false)
echo " ▪ Kernel Type Booter $(getprop debug.gpurend.vsync false)
echo " ▪ Kernel Type Booter $(getprop debug.hal_client_domain hal_vperf)
echo " ▪ Kernel Type Booter $(getprop debug.cpuprio 7)
echo " ▪ Kernel Type Booter $(getprop debug.gpuprio 7)
echo " ▪ Kernel Type Booter $(getprop debug.ioprio 7)
echo " ▪ Kernel Type Booter $(getprop debug.hwui.target_cpu_time_percent 100)
echo " ▪ Kernel Type Booter $(getprop debug.hwui.target_gpu_time_percent 100)
echo " ▪ Kernel Type Booter $(getprop debug.renderthread.reduceopstasksplitting true)
echo " ▪ Kernel Type Booter $(getprop debug.renderer.process_compound true)
echo " ▪ Kernel Type Booter $(getprop debug.performance.disturb false)
echo " ▪ Kernel Type Booter $(getprop debug.egl.force_msaa false)
echo " ▪ Kernel Type Booter $(getprop debug.egl.force_fxaa false)
echo " ▪ Kernel Type Booter $(getprop debug.egl.force_taa false)
echo " ▪ Kernel Type Booter $(getprop debug.egl.force_ssaa false)
echo " ▪ Kernel Type Booter $(getprop debug.egl.force_smaa false)
echo " ▪ Kernel Type Booter $(getprop debug.gpu.scheduler_pre.emption 1)
echo " ▪ Kernel Type Booter $(getprop debug.gralloc.gfx_ubwc_disable false)
echo " ▪ Kernel Type Booter $(getprop debug.sf.qctwa_preloader true)
echo " ▪ Kernel Type Booter $(getprop debug.sf.send_early_power_session_hint false)
echo " ▪ Kernel Type Booter $(getprop debug.sf.send_late_power_session_hint false)
echo " ▪ Kernel Type Booter $(getprop debug.sf.set_idle_timer_ms 30)
echo " ▪ Kernel Type Booter $(getprop debug.sf.set_idle_timer_ms 70)
echo " ▪ Kernel Type Booter $(getprop debug.sf.set_idle_timer_ms 8500)
echo " ▪ Kernel Type Booter $(getprop debug.log.slow_query_threshold 150)
echo " ▪ Kernel Type Booter $(getprop put system pointer_speed 7)
echo " ▪ Kernel Type Booter $(getprop put global low_power 0)
echo " ▪ Kernel Type Booter $(getprop put global low_power_sticky 0)
echo " ▪ Kernel Type Booter $(getprop put global NON_DISPATCHABLE_HANDLE 25)
echo " ▪ Kernel Type Booter $(getprop put global app_standby_list false)
echo " ▪ Kernel Type Booter $(getprop put secure doze_enabled 1)
echo " ▪ Kernel Type Booter $(getprop put secure doze_always_on 1)
echo " ▪ Kernel Type Booter $(getprop put secure ssl_session_cache null)
echo " ▪ Kernel Type Booter $(getprop debug.highfps.overlay 144)
(
echo " ▪ Kernel Type Booter $(getprop debug.composition.type gpu,getprop debug.egl.hw 1,setprop debug.egl.profiler 1,getprop debug.enabletr true,getprop debug.gralloc.enable_fb_ubwc 1,getprop debug.overlayui.enable 1,getprop debug.performance.tuning 1,getprop debug.qc.hardware truesetprop debug.qctwa.preservebuf 1,getprop debug.qctwa.statusbar 1,getprop debug.sf.hw 1,getprop debug.sf.latch_unsignaled 1,getprop debug.sf.enable_hwc_vds 1,getprop debug.sf.hw 1,getprop debug.sf.disable_backpressure 1,getprop debug.sf.early_app_phase_offset_ns 1500000,getprop debug.sf.early_gl_phase_offset_ns 3000000,getprop debug.sf.early_gl_app_phase_offset_ns 15000000,getprop debug.sf.early_phase_offset_ns 1500000,getprop debug.sf.enable_gl_backpressure 1,getprop debug.cpurend.vsync false,getprop debug.hwui.use_buffer_age false,getprop debug.egl.swapinterval 1,getprop debug.sf.high_fps_early_gl_phase_offset_ns 9000000,getprop debug.sf.high_fps_early_phase_offset_ns 6100000,getprop debug.sf.phase_offset_threshold_for_next_vsync_ns 6100000,getprop debug.sf.hwc.min.durasi 0,getprop debug.sf.disable_client_composition_cache 1,getprop debug.hwui.fps_divisor 240.000000,getprop debug.gr.swapinterval 1,getprop debug.kill_allocating_task 1,getprop debug.gr.numframebuffers 3,getprop hw3d.force 1,getprop hw2d.force 1,getprop debug.hwui.renderer skiagl,getprop debug.composition.type cpu,getprop debug.mdpcomp.logs 1)
echo " ▪ Kernel Type Booter $(getprop put global activity_manager_constantsmax_cached_processes=1024)
echo " ▪ Kernel Type Booter $(getprop put system pointer_speed 7)
echo " ▪ Kernel Type Booter $(getprop put global max_cached_processes 22900)
echo " ▪ Kernel Type Booter $(getprop put global background_settle_time 0)
echo " ▪ Kernel Type Booter $(getprop put global fgservice_min_shown_time 0)
echo " ▪ Kernel Type Booter $(getprop put global fgservice_min_report_time 0)
echo " ▪ Kernel Type Booter $(getprop put global fgservice_screen_on_before_time 0)
echo " ▪ Kernel Type Booter $(getprop put global fgservice_screen_on_after_time 0)
echo " ▪ Kernel Type Booter $(getprop put global content_provider_retain_time 0)
echo " ▪ Kernel Type Booter $(getprop put global gc_timeout 0)
echo " ▪ Kernel Type Booter $(getprop put global full_pss_min_interval 0)
echo " ▪ Kernel Type Booter $(getprop put global full_pss_lowered_interval 0)
echo " ▪ Kernel Type Booter $(getprop put global power_check_interval 0)
echo " ▪ Kernel Type Booter $(getprop put global power_check_max_cpu_1 110)
echo " ▪ Kernel Type Booter $(getprop put global power_check_max_cpu_2 110)
echo " ▪ Kernel Type Booter $(getprop put global power_check_max_cpu_3 220)
echo " ▶ MAX HIGH CPU FLASHED SUCCESFULLY! "
sleep 0
clear
cd 
./start-ubuntu.sh

' | base64 -d | sh
cd
sshd
./start-ubuntu.sh
